<?php

namespace App\Controllers;

use App\Models\Article;
class Articles extends BaseController
{
    /*
     * Home page where you can see a list of autogenerated topics to start browsing.
     */
    public function index(): string
    {
        $categoriesArray = array_values(Content::generateCategoriesArray());

        $page = view('header', ['title' => 'Select a category as a start point to infinite browsing!']);
        $page .= view('topics', [ 'categories' => $categoriesArray]);
        $page .= view('footer');
        return $page;
    }

    public function fromTopic(string $topic): string
    {
        $articleList = Content::generateFromTopic($topic);

        $page = view('header', [ 'topic' => $topic]);
        $page .= view('topic_articles', [
            'topic' => $topic,
            'articles' => $articleList,
        ]);
        $page .= view('footer');
        return $page;
    }


    public function nextArticle(string $sourceSlug, string $targetSlug): string
    {
        $article = new Article($targetSlug, $sourceSlug);
        Content::generateArticleContent($article);
        Content::generateGlossaryOfTerms($article);
        Content::generateInterestingFacts($article);
        Content::generateFurtherReads($article);
        return view('header', ['article' => $article]) .
            view('article_content') .
            view('article_glossary') .
            view('article_interesting_facts') .
            view('article_further_readings') .
            view('footer');
    }

    /*
     *  This functions returns a view with the article "skeleton" to display
     *  while the content is generated and received via AJAX requests
     */

    /*public function nextArticle(string $sourceSlug, string $targetSlug): string
    {
        return view
            view('article_skeleton');
    }*/

    /*
     * This functions returns a JSON object containing the title and content of the article
     * to be used in an AJAX request.
     */
    public function getTitleAndContentParagraphs(string $sourceSlug, string $targetSlug): string
    {
        $article = new Article($slug);
        Content::generateArticleContent($article);

        return json_encode([
            'title' => $article->getTitle(),
            'contentParagraphs' => $article->getContentParagraphs(),
        ]);
    }
    public function getGlossary(string $jsonArticleContent): string
    {
        $articleContent = json_decode($jsonArticleContent);
        $article = new Article($articleContent->slug);
        $article->setContentParagraphs($articleContent->contentParagraphs);
        $article->setTitle($articleContent->title);

        Content::generateGlossaryOfTerms($article);
        return json_encode($article->getGlossaryOfTerms());
    }
    public function getInterestingFacts(string $jsonArticleContent): string
    {
        $articleContent = json_decode($jsonArticleContent);
        $article = new Article($articleContent->slug);
        $article->setContentParagraphs($articleContent->contentParagraphs);
        $article->setTitle($articleContent->title);

        Content::generateInterestingFacts($article);
        return json_encode($article->getInterestingFacts());
    }
    public function getFurtherReads(string $jsonArticleContent): string
    {
        $articleContent = json_decode($jsonArticleContent);
        $article = new Article($articleContent->slug);
        $article->setContentParagraphs($articleContent->contentParagraphs);
        $article->setTitle($articleContent->title);

        Content::generateFurtherReads($article);
        return json_encode($article->getFurtherReads());
    }
}